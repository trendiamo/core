'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.computeFieldsToAddRemoveUpdate = exports.computeFieldsToUpdate = exports.computeFieldsToRemove = exports.computeFieldsToAdd = undefined;

var _difference = require('lodash/difference');

var _difference2 = _interopRequireDefault(_difference);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var formatId = function formatId(id) {
  return { id: id };
};

var computeFieldsToAdd = exports.computeFieldsToAdd = function computeFieldsToAdd(oldIds, newIds) {
  return (0, _difference2.default)(newIds, oldIds).map(formatId);
};

var computeFieldsToRemove = exports.computeFieldsToRemove = function computeFieldsToRemove(oldIds, newIds) {
  return (0, _difference2.default)(oldIds, newIds).map(formatId);
};

var computeFieldsToUpdate = exports.computeFieldsToUpdate = function computeFieldsToUpdate(oldIds, newIds) {
  return oldIds.filter(function (oldId) {
    return newIds.includes(oldId);
  }).map(formatId);
};

var computeFieldsToAddRemoveUpdate = exports.computeFieldsToAddRemoveUpdate = function computeFieldsToAddRemoveUpdate(oldIds, newIds) {
  return {
    fieldsToAdd: computeFieldsToAdd(oldIds, newIds),
    fieldsToRemove: computeFieldsToRemove(oldIds, newIds),
    fieldsToUpdate: computeFieldsToUpdate(oldIds, newIds)
  };
};