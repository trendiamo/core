{% assign languages = shop.enabled_locales %}
{% assign baseSettings = shop.metafields.global.ly_switcher_data_203157 %}
{% assign languageDetection = baseSettings.languageDetection %}
{% assign customCSS = baseSettings.customCSS %}
  {% capture switcher %}
    {% assign switcherData = shop.metafields.global.ly_switcher_data_203157.breakpoints[1].config %}
    {% assign type = switcherData.type %}
    {% assign show_name = switcherData.show_name %}
    {% assign show_custom_name = switcherData.show_custom_name %}
    {% assign show_iso_code = switcherData.show_iso_code %}
    {% assign show_flags = switcherData.show_flags%}
    {% assign round_flags = switcherData.round_flags%}
    {% assign is_transparent = switcherData.is_transparent%}
    {% assign is_dark = switcherData.is_dark%}
    {% assign position = switcherData.position %}
    {% assign corner = switcherData.corner %}
    {% assign h_space = switcherData.h_space %}
    {% assign v_space = switcherData.v_space %}
    {% case type %}
      {% when 'custom' %}
        {% if corner == 'bottom_left' or corner == 'bottom_right' or corner == 'bottom' %}
          {% assign is_dropup = true %}
        {% else %}
          {% assign is_dropup = false %}
        {% endif %}
        <div onclick="langify.switcher.toggleSwitcherOpen(this)" data-dropup="{{ is_dropup }}" class="ly-languages-switcher ly-custom-dropdown-switcher{% unless is_dark %} ly-bright-theme{% endunless %}{% if is_dropup %} ly-is-dropup{% endif %}{% if is_transparent %} ly-is-transparent{% endif %} {{ position }} {% if position != 'custom' %}{{ corner }}{% else %}ly-custom{% endif %} ly-breakpoint-{{ forloop.index }} ly-hide" {% if position != 'custom' %}style="margin: {{ v_space }}px {{ h_space }}px"{% endif %}>
          <span class="ly-custom-dropdown-current">
            {% if show_flags %}<i class="ly-icon ly-flag-icon ly-flag-icon-{{ language.iso_code }}"></i>{% endif %}
            <span class="ly-custom-dropdown-current-inner ly-custom-dropdown-current-inner-text">
              {% if show_name %}{{ request.locale.name }}{% endif %}
              {% if show_custom_name %}{% assign lang_key = 'ly-' | append: request.locale.iso_code %}{{ shop.metafields.v2_lang_name_map[lang_key] }}{% endif %}
              {% if show_iso_code %}{{ request.locale.iso_code | upcase }}{% endif %}
            </span>
            <span class="ly-custom-dropdown-current-inner {% if is_dropup %}ly-arrow-up{% else %}ly-arrow-down{% endif %} {% if is_dark %}ly-arrow-white{% else %}ly-arrow-black{% endif %}"></span>
          </span>
          <ul class="ly-custom-dropdown-list ly-is-open {% unless is_dark %}ly-bright-theme{% endunless %}">
            {% for language in languages %}
              {% if language.iso_code != request.locale.iso_code %}
                <li key="{{language.iso_code}}">
                  {% assign current_root_url = request.locale.root_url | append: '/' %}{% assign path = request.path | replace_first: current_root_url, '/' %}{% if path == request.locale.root_url %}{% assign path = '' %}{% endif %}{% assign url = language.root_url | append: path | replace: '//', '/' | replace: '///', '/' %}
                  <a class="ly-custom-dropdown-list-element ly-languages-switcher-link{% unless is_dark %} ly-bright-theme{% endunless %}{% if request.locale.iso_code == language.iso_code %} current_lang{% endif %}" href="{% if request.locale.iso_code == language.iso_code %}#{% else %}{{url}}{% endif %}" data-ly-code="{{language.iso_code}}" data-ly-locked="true">
                    <i class="ly-icon ly-flag-icon ly-flag-icon-{{ language.iso_code }}"></i>
                    <span class="ly-custom-dropdown-list-element-right">
                      {% if show_name %}{{language.name}}{% endif %}
                      {% if show_custom_name %}{% assign lang_key = 'ly-' | append: language.iso_code %}{{ shop.metafields.v2_lang_name_map[lang_key] }}{% endif %}
                      {% if show_iso_code %}{{ language.iso_code | upcase }}{% endif %}
                    </span>
                  </a>
                </li>
              {% endif %}
            {% endfor %}
          </ul>
        </div>
      {% when 'native_select' %}
        <select data-breakpoint="{{ breakpoint.key }}" class="ly-languages-switcher ly-native-select {{ position }} {% if position != 'custom' %}{{ corner }}{% endif %} ly-breakpoint-{{ forloop.index }} ly-hide{% if position == 'custom' %} ly-custom{% endif %}{% unless is_dark %} ly-bright-theme{% endunless %}" {% if position != 'custom' %}style="margin: {{ v_space }}px {{ h_space }}px"{% endif %}>
          {% for language in languages %}
            {% assign current_root_url = request.locale.root_url | append: '/' %}{% assign path = request.path | replace_first: current_root_url, '/' %}{% if path == request.locale.root_url %}{% assign path = '' %}{% endif %}{% assign url = language.root_url | append: path | replace: '//', '/' | replace: '///', '/' %}
            <option key="{{language.iso_code}}" {% if request.locale.iso_code == language.iso_code %}selected="selected"{% endif %} class="{% if request.locale.iso_code == language.iso_code %}current_lang{% endif %}" value="{{language.iso_code}}" data-url="{{url}}">
              {% if show_name %}{{ language.name }}{% endif %}
              {% if show_custom_name %}{% assign lang_key = 'ly-' | append: language.iso_code %}{{ shop.metafields.v2_lang_name_map[lang_key] }}{% endif %}
              {% if show_iso_code %}{{ language.iso_code | upcase }}{% endif %}
            </option>
          {% endfor %}
        </select>
      {% when 'links_list' %}
        <ul class="ly-languages-switcher ly-list {{ position }} {% if position != 'custom' %}{{ corner }}{% endif %} ly-hide{% if position == 'custom' %} ly-custom{% endif %}{% unless is_dark %} ly-bright-theme{% endunless %}" {% if position != 'custom' %}style="margin: {{ v_space }}px {{ h_space }}px"{% endif %}>
          {% for language in languages %}
          {% assign current_root_url = request.locale.root_url | append: '/' %}{% assign path = request.path | replace_first: current_root_url, '/' %}{% if path == request.locale.root_url %}{% assign path = '' %}{% endif %}{% assign url = language.root_url | append: path | replace: '//', '/' | replace: '///', '/' %}
          <li key="{{language.iso_code}}">
              <a href="{% if request.locale.iso_code == language.iso_code %}#{% else %}{{url}}{% endif %}" data-ly-code="{{language.iso_code}}" data-ly-locked="true" class="ly-languages-switcher-link{% if request.locale.iso_code == language.iso_code %} current_lang{% endif %}">
                <i class="ly-icon ly-flag-icon ly-flag-icon-{{ language.iso_code }}"></i>
                {% if show_name %}{{ language.name }}{% endif %}
                {% if show_custom_name %}{% assign lang_key = 'ly-' | append: language.iso_code %}{{ shop.metafields.v2_lang_name_map[lang_key] }}{% endif %}
                {% if show_iso_code %}{{ language.iso_code | upcase }}{% endif %}
              </a>
            </li>
          {% endfor %}
        </ul>
      {% else %}
        {% if type != 'none' %}
          <div data-breakpoint="{{ breakpoint.key }}" class="ly-languages-switcher ly-links {{ position }} {% if position != 'custom' %}{{ corner }}{% endif %} ly-breakpoint-{{ forloop.index }} ly-hide{% if position == 'custom' %} ly-custom{% endif %}{% unless is_dark %} ly-bright-theme{% endunless %}" {% if position != 'custom' %}style="margin: {{ v_space }}px {{ h_space }}px"{% endif %}>
            {% for language in languages %}
              {% assign current_root_url = request.locale.root_url | append: '/' %}{% assign path = request.path | replace_first: current_root_url, '/' %}{% if path == request.locale.root_url %}{% assign path = '' %}{% endif %}{% assign url = language.root_url | append: path | replace: '//', '/' | replace: '///', '/' %}
              <a href="{% if request.locale.iso_code == language.iso_code %}#{% else %}{{url}}{% endif %}" data-ly-code="{{language.iso_code}}"  data-ly-locked="true" class="ly-languages-switcher-link{% if request.locale.iso_code == language.iso_code %} current_lang{% endif %}">
                {% if show_flags %}<i class="ly-icon ly-flag-icon ly-flag-icon-{{ language.iso_code }}"></i>{% endif %}
                {% if show_name %}{{ language.name }}{% endif %}
                {% if show_custom_name %}{% assign lang_key = 'ly-' | append: language.iso_code %}{{ shop.metafields.v2_lang_name_map[lang_key] }}{% endif %}
                {% if show_iso_code %}{{ language.iso_code | upcase }}{% endif %}
              </a>
            {% endfor %}
          </div>
        {% endif %}
    {% endcase %}
  {% endcapture %}
  <div class="switcher-container">
    {{ switcher }}
  </div>


<style>
  {%- for breakpoint in shop.metafields.global.ly_switcher_data_203157.breakpoints -%}
    {%- capture minWidth -%}
      {%- if forloop.first == true %}0px{% else %}{% assign prevIndex = forloop.index | minus: 1 %}{{ shop.metafields.global.ly_switcher_data_203157.breakpoints[prevIndex].key }}px{% endif -%}
    {%- endcapture -%}
    {%- capture maxWidth -%}
  	  {%- assign maxValue = shop.metafields.global.ly_switcher_data_203157.breakpoints[forloop.index].key | minus: 1 -%}
      and (max-width: {{ maxValue }}px )
    {%- endcapture -%}
    .ly-languages-switcher.ly-breakpoint-{{ forloop.index }} { display: none; }
    @media (min-width: {{- minWidth -}}) {% unless forloop.last %}{{- maxWidth -}}{% endunless %} {
      .ly-languages-switcher.ly-breakpoint-{{ forloop.index }} { display: inline-block; }
    }
  {%- endfor -%}
  {%- for language in shop.enabled_locales -%}
    {% assign iconPath = 'ly-icon-' | append: language.iso_code | append: '.svg' %}
    .ly-flag-icon-{{ language.iso_code }} {
      background-image: url('{{ iconPath | asset_url }}');
    }
  {%- endfor -%}
</style>

{% if customCSS and customCSS != '' %}
<style>
  {{ customCSS }}
</style>
{% endif %}

{% if languageDetection %}
<script>
  var languageUrls = [];
  {%- for language in shop.enabled_locales -%}
    languageUrls['{{ language.iso_code }}'] = '{{ language.root_url }}';
  {%- endfor -%}
  function getVal(str) {
    var v = window.location.search.match(new RegExp('(?:[?&]'+str+'=)([^&]+)'));
    return v ? v[1] : null;
  }
  function getCookie(name) {
    var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
    return v ? v[2] : null;
  }
  function setCookie(name, value, days) {
    var d = new Date;
    d.setTime(d.getTime() + 24*60*60*1000*days);
    document.cookie = name + "=" + value + ";path=/;expires=" + d.toGMTString();
  }
  var userLang = navigator.language || navigator.userLanguage;
  var languageDetectionOff
  if(userLang && !getCookie('ly-lang-detected') && getVal('ly-lang-detect') !== 'off') {
    var rootUrl = languageUrls[userLang];
    if(!rootUrl) {
      userLang = userLang.substring(0, 2);
      rootUrl = languageUrls[userLang];
    }
    if(rootUrl) {
      if(rootUrl == '/') {rootUrl = '';}
      {% assign used_root_url = request.locale.root_url %}
      {% if used_root_url == '/' %}{% assign used_root_url = '' %}{% endif %}
      {% assign replace_part = 'https://' | append: shop.domain | append: used_root_url | downcase %}
      var finalUrl = rootUrl + '{{ canonical_url | replace: replace_part, '' }}';
      if(finalUrl == '') {finalUrl = '/';}
      setCookie('ly-lang-detected', userLang, 365);
      window.location.replace(finalUrl);
    }
  }
</script>
{% endif %}

<!--[[{"customCSS":"","languageDetection":false,"breakpoints":[{"key":1200,"label":"1200px","active":true,"config":{"type":"custom","corner":"top_right","position":"absolute","show_flags":false,"show_name":false,"show_iso_code":true,"round_flags":false,"is_dark":false,"is_transparent":false,"dropdown_open":false,"h_space":0,"v_space":0,"show_label":true,"show_custom_name":false,"switcherLabel":"show_iso_code"}},{"key":0,"label":"0px","active":false,"config":{"type":"custom","corner":"bottom_right","position":"fixed","show_flags":true,"show_name":true,"show_iso_code":false,"round_flags":false,"is_dark":false,"is_transparent":false,"dropdown_open":false,"h_space":0,"v_space":0,"show_label":true,"show_custom_name":false,"switcherLabel":"show_name"}}]}]]-->
